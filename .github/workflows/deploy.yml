name: Deploy python package
on:
  pull_request:
    types: [closed]
    branches:
      - master
      - develop

jobs:
  test:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    env:
      branch: ${{ github.ref }}
      poetry_token: ${{ secrets.POETRY_TOKEN }}
    strategy:
      matrix:
        python-version: [3.8]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry==1.0.0
          poetry config virtualenvs.create false
          poetry install

      - name: Static code checks
        run: |
          pip install flake8
          make linters
      - name: Test with pytest
        run: |
          pip install pytest
      - uses: actions/checkout@v2
      - name: bumpversion
        run: |
          [ ${branch} = master ] && export PART=minor || [ ${branch} = develop ] && export PART=patch
          pip install bumpversion
          echo ${branch}
          echo ${PART}
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          bumpversion --message '[skip ci] Bump version: {current_version} â†’ {new_version}' --list --verbose ${PART}
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}
          tags: true
          force: true
      - name: Publish pypi package
        run: |
          poetry config pypi-token ${POETRY_TOKEN}
          poetry publish
